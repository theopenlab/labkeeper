#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
---
- name: Config replication mysql service
  hosts: mysql-master, mysql-slave
  become: yes
  tasks:
    - name: Copy my.cnf into place.
      template:
        src: "{{ labkeeper_config_git_dest }}/mysql/my.cnf.j2"
        dest: /etc/mysql/my.cnf

    - name: Restart Mysql servers in master node.
      service:
        name: mysql
        state: restarted

- name: Config replication users
  hosts: mysql-master, mysql-slave
  become: yes
  tasks:
    - name: Ensure replication user exists.
      mysql_user:
        name: "replica"
        host: "{{ item }}"
        password: "replica"
        priv: "*.*:REPLICATION SLAVE,REPLICATION CLIENT"
        state: present
      with_items:
        - localhost
        - "{{ hostvars[groups['mysql-slave'][0]].ansible_host }}"
        - "{{ hostvars[groups['mysql-master'][0]].ansible_host }}"

    - name: Stop slave if already started.
      mysql_replication: mode=stopslave

- name: Config Mysql Slave of replication
  hosts: mysql-slave
  become: yes
  tasks:
    - name: Dumps master database to slave
      when: sync_db_from_master|default(false)|bool
      block:
        - name: Dumps master database
          mysql_db:
            state: dump
            name: zuul
            target: /tmp/mysql-master-dumps.sql
          delegate_to: "{{ groups['mysql-master'][0] }}"

        - name: Fetch replica master databases to local
          fetch:
            src: /tmp/mysql-master-dumps.sql
            dest: /tmp/mysql-master-dumps.sql
            flat: yes
          delegate_to: "{{ groups['mysql-master'][0] }}"

        - name: Copy replica master databases to slave
          copy:
            src: /tmp/mysql-master-dumps.sql
            dest: /tmp/mysql-master-dumps.sql

        - name: Import replica master databases to slave
          mysql_db:
            state: import
            name: zuul
            target: /tmp/mysql-master-dumps.sql

    - name: Check slave replication status.
      mysql_replication:
        mode: getslave
        login_user: "replica"
        login_password: "replica"
      ignore_errors: true
      register: slave_status

    - name: Check master replication status.
      mysql_replication:
        mode: getmaster
        login_user: "replica"
        login_password: "replica"
      delegate_to: "{{ groups['mysql-master'][0] }}"
      register: master_status

    - name: Configure replication on the slave.
      mysql_replication:
        mode: changemaster
        master_host: "{{ hostvars[groups['mysql-master'][0]].ansible_host }}"
        master_user: "replica"
        master_password: "replica"
        master_log_file: "{{ master_status.File }}"
        master_log_pos: "{{ master_status.Position }}"
      when:
        - (slave_status.Is_Slave is defined and not slave_status.Is_Slave) or
          (slave_status.Is_Slave is not defined and slave_status is failed)

    - name: Start replication.
      mysql_replication:
        mode: startslave
      when:
      - (slave_status.Is_Slave is defined and not slave_status.Is_Slave) or
        (slave_status.Is_Slave is not defined and slave_status is failed)

#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
---
- name: Install keepalived
  hosts: keepalived
  become: yes
  tasks:
    - name: Install keepalived
      package: name=keepalived

    - name: Copy openlab key to keepalived nodes
      copy:
        src: "{{ labkeeper_src_dir }}/openlab.pem"
        dest: /etc/keepalived/openlab.pem
        mode: 0600

    - name: Enable ip_vs module
      shell: |
        modprobe ip_vs
        modprobe ip_vs_wrr
        lsmod |grep ip_vs
      args:
        executable: /bin/bash

- name: Config keepalived master
  hosts: keepalived-master
  become: yes
  tasks:
    - name: Get interface of default route
      shell: ip route |grep default | sed -nr 's/.*dev ([^\ ]+).*/\1/p'
      register: local_default_interface

    - name: Generate keepalived conf
      template:
        src: "{{ labkeeper_config_git_dest }}/keepalived/keepalived.conf.j2"
        dest: /etc/keepalived/keepalived.conf
      vars:
        keepalived_role: MASTER
        kp_opposite_ip: "{{ hostvars[groups['keepalived-slave'][0]].ansible_host }}"
        notify_down_action: "/etc/keepalived/master_notify.sh"
        local_interface: "{{ local_default_interface.stdout }}"

    - name: Copy necessary scripts
      copy: src={{ item.src }} dest={{ item.dest }} mode=0755
      with_items:
        - { src: "{{ labkeeper_config_git_dest }}/keepalived/master_notify.sh.j2", dest: "/etc/keepalived/master_notify.sh" }
        - { src: "{{ labkeeper_config_git_dest }}/keepalived/notify_upstream.py", dest: "/etc/keepalived/notify_upstream.py" }
      vars:
        upstream_user: moo-ai
        upstream_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          31636661633365633364613732343738643135616137636566613536383833636138366338346337
          6562623862363161316435323637633533656166343532620a353833366162393066353533343030
          36666134313835616330373535356137653064656535313734306638376363663062653961646433
          3466343735323338310a313963666339653934636630393437303239356236393234336562323065
          6665
        ori_env_role: "BACKUP"

    - name: install script dependency
      pip:
        name: "{{ item }}"
      with_items:
        - PyGithub
        - argparse

    - name: Start keepalived service
      service: name=keepalived state=started

- name: Config keepalived slave
  hosts: keepalived-slave
  become: yes
  tasks:
    - name: Get interface of default route
      shell: ip route |grep default | sed -nr 's/.*dev ([^\ ]+).*/\1/p'
      register: local_default_interface

    - name: Generate keepalived conf
      template:
        src: "{{ labkeeper_config_git_dest }}/keepalived/keepalived.conf.j2"
        dest: /etc/keepalived/keepalived.conf
      vars:
        keepalived_role: BACKUP
        kp_opposite_ip: "{{ hostvars[groups['keepalived-master'][0]].ansible_host }}"
        notify_down_action: "/etc/keepalived/start_slave_svcs.sh"
        local_interface: "{{ local_default_interface.stdout }}"

    - name: Copy necessary scripts
      copy: src={{ item.src }} dest={{ item.dest }} mode=0755
      with_items:
        - { src: "{{ labkeeper_config_git_dest }}/keepalived/master_notify.sh.j2", dest: "/etc/keepalived/master_notify.sh" }
        - { src: "{{ labkeeper_config_git_dest }}/keepalived/notify_upstream.py", dest: "/etc/keepalived/notify_upstream.py" }
        - { src: "{{ labkeeper_config_git_dest }}/keepalived/start_slave_svcs.sh.j2", dest: "/etc/keepalived/start_slave_svcs.sh" }
      vars:
        nodepool_master_ip: "{{ hostvars[groups['nodepool-builder-master'][0]].ansible_host }}"
        nodepool_slave_ip: "{{ hostvars[groups['nodepool-builder-slave'][0]].ansible_host }}"
        zuul_master_ip: "{{ hostvars[groups['zuul-scheduler-master'][0]].ansible_host }}"
        zuul_slave_ip: "{{ hostvars[groups['zuul-scheduler-slave'][0]].ansible_host }}"
        upstream_user: moo-ai
        upstream_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          31636661633365633364613732343738643135616137636566613536383833636138366338346337
          6562623862363161316435323637633533656166343532620a353833366162393066353533343030
          36666134313835616330373535356137653064656535313734306638376363663062653961646433
          3466343735323338310a313963666339653934636630393437303239356236393234336562323065
          6665
        app_name: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          37393735656236656535663061646437313839396634326534653466323166623133613432353939
          3536336463303365636134393765623363666161626666300a366162363033366565313962356263
          61383566333938313831336564623334613362343866383462343461643439333234386532616461
          3339663232623034660a393662313762366662323536326336373961616664326165363134336134
          3433
        ori_env_role: "MASTER"

    - name: install script dependency
      pip:
        name: "{{ item }}"
      with_items:
        - PyGithub
        - argparse

    - name: Start keepalived service
      service: name=keepalived state=started
